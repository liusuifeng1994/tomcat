# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

abstractConnectionHandler.connectionsGet=소켓 [{1}]을(를) 위한 프로세서 [{0}]을(를) 발견했습니다.
abstractConnectionHandler.error=요청을 읽다가 오류 발생. 무시합니다.
abstractConnectionHandler.ioexception.debug=IOException들은 정상적이므로, 무시합니다.
abstractConnectionHandler.negotiatedProcessor.fail=Negotiate된 프로토콜 [{0}]을(를) 위한 프로세서를 생성하지 못했습니다.
abstractConnectionHandler.process=상태가 [{1}]인 소켓 [{0}]을(를) 처리합니다.
abstractConnectionHandler.processorPop=캐시로부터 프로세서 [{0}]을(를) 추출함.
abstractConnectionHandler.protocolexception.debug=ProtocolException들은 정상적입니다. 무시합니다.
abstractConnectionHandler.socketexception.debug=SocketException들은 정상적인 상태이므로 무시합니다.
abstractConnectionHandler.upgradeCreate=소켓 wrapper [{1}]을(를) 위한 업그레이드 프로세서 [{0}]을(를) 생성했습니다.

abstractProcessor.fallToDebug=\n\
더 이상의 요청에 대한 파싱 오류들은 DEBUG 레벨 로그로 기록될 것입니다.
abstractProcessor.hostInvalid=호스트 [{0}]은(는) 유효하지 않습니다.
abstractProcessor.httpupgrade.notsupported=HTTP 업그레이드는 이 프로토콜에 의해 지원되지 않습니다.
abstractProcessor.noExecute=이 Processor가 현재 SocketWrapper와 연관되어 있지 않기 때문에 처리 작업을 컨테이너 쓰레드가 이관시킬 수 없습니다.
abstractProcessor.nonContainerThreadError=컨테이너 쓰레드가 아닌 쓰레드에서 처리 도중 오류가 발생했습니다. 연결은 즉시 닫힐 것입니다.
abstractProcessor.pushrequest.notsupported=이 프로토콜은 서버 push 요청들을 지원하지 않습니다.
abstractProcessor.socket.ssl=SSL 속성들을 얻으려는 중 예외 발생

abstractProtocol.mbeanDeregistrationFailed=MBean 서버 [{1}](으)로부터 [{0}](이)라는 이름을 가진 MBean의 등록을 제거하지 못했습니다.

abstractProtocolHandler.asyncTimeoutError=비동기 제한 시간 초과를 처리하는 동안 오류 발생
abstractProtocolHandler.destroy=ProtocolHandler [{0}]을(를) 소멸시킵니다.
abstractProtocolHandler.init=ProtocolHandler [{0}]을(를) 초기화합니다.
abstractProtocolHandler.pause=ProtocolHandler [{0}]을(를) 일시 정지 중
abstractProtocolHandler.portOffset=ProtocolHandler [{0}]이(가) base port가 [{1}](으)로 port offset이 [{2}](으)로 설정됩니다.
abstractProtocolHandler.resume=프로토콜 핸들러 [{0}]을 재개합니다.
abstractProtocolHandler.setAttribute=속성 [{0}]에 값 [{1}]을(를) 설정
abstractProtocolHandler.start=프로토콜 핸들러 [{0}]을(를) 시작합니다.
abstractProtocolHandler.stop=ProtocolHandler [{0}]을(를) 중지시킵니다.

asyncStateMachine.invalidAsyncState=Async 상태가 [{1}]인 요청에 대하여 [{0}]을(를) 호출하는 것은 유효하지 않습니다.

request.notAsync=Non-blocking IO로 전환하려는 것은 오직 비동기 처리 또는 HTTP 업그레이드 처리 시에만 유효합니다.
request.nullReadListener=setReadListener()에 전달된 리스너는 널일 수 없습니다.
request.readListenerSet=Non-blocking 읽기 리스너가 이미 설정되어 있습니다.

response.encoding.invalid=인코딩 [{0}]은(는) JRE에 의해 인식되지 않습니다.
response.noTrailers.notSupported=Trailer fields supplier가 이 응답을 위해 설정될 수 없습니다. 기반 프로토콜이 trailer field들을 지원하지 않거나, 또는 해당 프로토콜이 해당 응답이 커밋되기 전에 Trailer fields supplier가 설정되기를 요구합니다.
response.notAsync=Non-blocking IO로 전환하려는 것은 오직 비동기 처리 또는 HTTP 업그레이드 처리 시에만 유효합니다.
response.notNonBlocking=응답이 non-blocking 모드에 진입하지 않았을 때에 isReady()를 호출하는 것은 유효하지 않습니다.
response.nullWriteListener=setWriteListener()에 전달되는 리스너가 널이이서는 안됩니다.
response.writeListenerSet=Non-blocking writer listener가 이미 설정되었습니다.
